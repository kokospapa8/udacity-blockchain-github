{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x64d95db026f1985a6add7c5489cd9079283fcda69407a2ba38ca876fbf6f7f33\",\"urls\":[\"bzz-raw://b9cf06c2207afdb74969215b2b95b0a7554ba877455381f607d41996c0261948\",\"dweb:/ipfs/QmNixEAmtXDmMbHARAvwN1GB4YMWLfekfpiTB7qnPZX9mN\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x270a27be0cabf985de57c1efb09e91a0206c59567a36c9d8f46458eb7ade2ff3\",\"urls\":[\"bzz-raw://abc446c53511dc5084b3420da691d33e2288a7dcc2861d579fcb25c12745389b\",\"dweb:/ipfs/QmR8hP7rb6BaKdba4e9RjXEDC74vG6F2hvF5y9Rekyn1ys\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0x06b1567283c07ae989e38fde5002bc2f6c4e70f6bf170cadfe7c8daf946d6ba9\",\"urls\":[\"bzz-raw://a2c381f73fc012b71a89e1d0ea4bfc0f8b27066d53774e9175299b0956273241\",\"dweb:/ipfs/QmRC2pzUpomonDFvaSy2WeYHcx6NKChs1VfBVdpUMSA28w\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806340c10f19116100de578063893d20e811610097578063bdc32be011610071578063bdc32be014610d5d578063c87b56dd14610de0578063e985e9c514610e87578063f2fde38b14610f0357610173565b8063893d20e814610bbe578063a22cb46514610c08578063b88d4fde14610c5857610173565b806340c10f191461086957806342842e0e146108cf5780634f6ccce71461093d578063621e9ec01461097f5780636352211e14610af857806370a0823114610b6657610173565b806318160ddd1161013057806318160ddd146103cf57806323b872dd146103ed57806327dc297e1461045b5780632f745c591461052057806338bbfa50146105825780633eec14da146106de57610173565b806301ffc9a714610178578063081812fc146101dd578063095ea7b31461024b578063150704011461029957806316c38b3c1461031c57806317d7de7c1461034c575b600080fd5b6101c36004803603602081101561018e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f47565b604051808215151515815260200191505060405180910390f35b610209600480360360208110156101f357600080fd5b8101908080359060200190929190505050610faf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102976004803603604081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fec565b005b6102a1611249565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e15780820151818401526020810190506102c6565b50505050905090810190601f16801561030e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61034a6004803603602081101561033257600080fd5b810190808035151590602001909291905050506112eb565b005b6103546114bb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610394578082015181840152602081019050610379565b50505050905090810190601f1680156103c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103d761155d565b6040518082815260200191505060405180910390f35b6104596004803603606081101561040357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061156a565b005b61051e6004803603604081101561047157600080fd5b81019080803590602001909291908035906020019064010000000081111561049857600080fd5b8201836020820111156104aa57600080fd5b803590602001918460018302840111640100000000831117156104cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061158d565b005b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115d0565b6040518082815260200191505060405180910390f35b6106dc6004803603606081101561059857600080fd5b8101908080359060200190929190803590602001906401000000008111156105bf57600080fd5b8201836020820111156105d157600080fd5b803590602001918460018302840111640100000000831117156105f357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561065657600080fd5b82018360208201111561066857600080fd5b8035906020019184600183028401116401000000008311171561068a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611643565b005b61086760048036036101808110156106f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156107d4578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610780565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611648565b005b6108b56004803603604081101561087f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119e5565b604051808215151515815260200191505060405180910390f35b61093b600480360360608110156108e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a8f565b005b6109696004803603602081101561095357600080fd5b8101908080359060200190929190505050611aaf565b6040518082815260200191505060405180910390f35b610ade600480360361014081101561099657600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610a4b578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906109f7565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611ae3565b604051808215151515815260200191505060405180910390f35b610b2460048036036020811015610b0e57600080fd5b8101908080359060200190929190505050611cdf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ba860048036036020811015610b7c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d1c565b6040518082815260200191505060405180910390f35b610bc6611d6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c5660048036036040811015610c1e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611d95565b005b610d5b60048036036080811015610c6e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610cd557600080fd5b820183602082011115610ce757600080fd5b80359060200191846001830284011164010000000083111715610d0957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ecf565b005b610d65611ef5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610da5578082015181840152602081019050610d8a565b50505050905090810190601f168015610dd25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e0c60048036036020811015610df657600080fd5b8101908080359060200190929190505050611f97565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e4c578082015181840152602081019050610e31565b50505050905090810190601f168015610e795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ee960048036036040811015610e9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061205e565b604051808215151515815260200191505060405180910390f35b610f4560048036036020811015610f1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120f2565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614353602d913960400191505060405180910390fd5b6110cf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff163361205e565b8061112657506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611198576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4e6f7420616c6c6f77656420746f20617070726f76650000000000000000000081525060200191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550803373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112e15780601f106112b6576101008083540402835291602001916112e1565b820191906000526020600020905b8154815290600101906020018083116112c457829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616e206f6e6c792062652063616c6c6564206279206f776e6572000000000081525060200191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611440577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b600060149054906101000a900460ff166114b8577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115535780601f1061152857610100808354040283529160200191611553565b820191906000526020600020905b81548152906001019060200180831161153657829003601f168201915b5050505050905090565b6000600880549050905090565b6115743382612358565b61157d57600080fd5b6115888383836123ed565b505050565b6115cc828260006040519080825280601f01601f1916602001820160405280156115c65781602001600182028038833980820191505090505b50611643565b5050565b60006115db83611d1c565b82106115e657600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061163057fe5b9060005260206000200154905092915050565b505050565b6000848484846040516020018085600260200280838360005b8381101561167c578082015181840152602081019050611661565b505050509050018460026000925b818410156116d05782846020020151600260200280838360005b838110156116bf5780820151818401526020810190506116a4565b50505050905001926001019261168a565b9250505083600260200280838360005b838110156116fb5780820151818401526020810190506116e0565b5050505090500182600260200280838360005b8381101561172957808201518184015260208101905061170e565b505050509050019450505050506040516020818303038152906040528051906020012090506014600082815260200190815260200160002060009054906101000a900460ff16156117e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f736f6c7574696f6e20616c72656164792075736564206265666f72650000000081525060200191505060405180910390fd5b60006117f086868686611ae3565b905080611865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f70726f6f66206973206e6f742076616c6964210000000000000000000000000081525060200191505060405180910390fd5b61186d6140e2565b60405180608001604052808481526020018a73ffffffffffffffffffffffffffffffffffffffff16815260200189815260200160011515815250905080601360008a81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505060016014600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd54d9ef5d3801dc9b4c79ac9cb0d5ed3b9c83d168bd86bb6e937ca7df70392da838a8a604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050505050505050565b60006013600083815260200190815260200160002060030160009054906101000a900460ff16611a7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f736f6c7574696f6e20616c72656164792075736564206265666f72650000000081525060200191505060405180910390fd5b611a878383612411565b905092915050565b611aaa83838360405180602001604052806000815250611ecf565b505050565b6000611ab961155d565b8210611ac457600080fd5b60088281548110611ad157fe5b90600052602060002001549050919050565b6000611aed614125565b604051806040016040528087600060028110611b0557fe5b6020020151815260200187600160028110611b1c57fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110611b4f57fe5b6020020151600060028110611b6057fe5b6020020151815260200188600060028110611b7757fe5b6020020151600160028110611b8857fe5b60200201518152508152602001604051806040016040528088600160028110611bad57fe5b6020020151600060028110611bbe57fe5b6020020151815260200188600160028110611bd557fe5b6020020151600160028110611be657fe5b60200201518152508152508160200181905250604051806040016040528085600060028110611c1157fe5b6020020151815260200185600160028110611c2857fe5b6020020151815250816040018190525060606002604051908082528060200260200182016040528015611c6a5781602001602082028038833980820191505090505b50905060008090505b6002811015611cb257848160028110611c8857fe5b6020020151828281518110611c9957fe5b6020026020010181815250508080600101915050611c73565b506000611cbf82846124f2565b1415611cd057600192505050611cd7565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611d65600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612664565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611dce57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611eda84848461156a565b611ee684848484612672565b611eef57600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f8d5780601f10611f6257610100808354040283529160200191611f8d565b820191906000526020600020905b815481529060010190602001808311611f7057829003601f168201915b5050505050905090565b6060611fa28261285b565b611fab57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120525780601f1061202757610100808354040283529160200191612052565b820191906000526020600020905b81548152906001019060200180831161203557829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146121b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616e206f6e6c792062652063616c6c6564206279206f776e6572000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642041646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7699c77f2404f9b6bbd003861bb4af8ae70b205e19e73d7ec7fe4590db59a6b78183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b60008061236483611cdf565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806123d357508373ffffffffffffffffffffffffffffffffffffffff166123bb84610faf565b73ffffffffffffffffffffffffffffffffffffffff16145b806123e457506123e3818561205e565b5b91505092915050565b6123f88383836128cd565b6124028382612ba9565b61240c8282612d47565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146124d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616e206f6e6c792062652063616c6c6564206279206f776e6572000000000081525060200191505060405180910390fd5b6124df8383612e0e565b6124e882612e2f565b6001905092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050612520614158565b612528612f80565b905080608001515160018651011461253f57600080fd5b61254761419f565b6040518060400160405280600081526020016000815250905060008090505b86518110156125dd578387828151811061257c57fe5b60200260200101511061258e57600080fd5b6125ce826125c9856080015160018501815181106125a857fe5b60200260200101518a85815181106125bc57fe5b60200260200101516133cd565b61345f565b91508080600101915050612566565b506126008183608001516000815181106125f357fe5b602002602001015161345f565b90506126468560000151866020015161261884613510565b856040015161262a8a60400151613510565b876060015161263c8960000151613510565b89602001516135aa565b612656576001935050505061265e565b600093505050505b92915050565b600081600001549050919050565b60006126938473ffffffffffffffffffffffffffffffffffffffff1661370e565b6126a05760019050612853565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561277b578082015181840152602081019050612760565b50505050905090810190601f1680156127a85780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156127ca57600080fd5b505af11580156127de573d6000803e3d6000fd5b505050506040513d60208110156127f457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146129a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e636f7272656374206f776e6572000000000000000000000000000000000081525060200191505060405180910390fd5b6129c08273ffffffffffffffffffffffffffffffffffffffff1661370e565b15612a16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806143806024913960400191505060405180910390fd5b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612b02600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613759565b612b49600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061377c565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612c016001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061379290919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612cee576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612c6e57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612cc657fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612d4091906141b9565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612e1882826137dc565b612e228282612d47565b612e2b81613950565b5050565b612e388161285b565b612eaa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b612f5660118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f435780601f10612f1857610100808354040283529160200191612f43565b820191906000526020600020905b815481529060010190602001808311612f2657829003601f168201915b5050505050612f518361399c565b613ac9565b601260008381526020019081526020016000209080519060200190612f7c9291906141e5565b5050565b612f88614158565b60405180604001604052807f146b7bd535ae420df60cf22a74c156bb81f5b341dc77f1c0baa728bdfbf05f9c81526020017f1beab96494d2700c5a5278c46fcd425f7524b948f61a6aa2a7da2cc4c3bd83c68152508160000181905250604051806040016040528060405180604001604052807f1372f90d0b3b9b0fd45518212d333763167edfd5f263e3815c9a0e16aca849d281526020017f27dfcdf04e13073589bfffead858365f14161deffcff113a50c4bbb368f7383d815250815260200160405180604001604052807f1464779c0d6ec35a4055da2ffaccd81ad2d732be6333dbd5b086ad4486c0869781526020017f170812eb7be021406116b64f6d7889292aab6335a219acd48e7f9346a82cbc868152508152508160200181905250604051806040016040528060405180604001604052807f25bf865c50863ffae85f5ec20fc31f331a24351ca63a01a99cf73a77e820959a81526020017f2438b4b183dc155488d4f77031b52616218b8e9af803ef8393049b35c631647f815250815260200160405180604001604052807f16cd68df5129c1b28cc4fb84da13656945b795a0f239de795625c8253f41c58281526020017f0d971650a102b1179878b57f02a1bd38bb6471ec9712d81428ac09beac0f02538152508152508160400181905250604051806040016040528060405180604001604052807ef91903c6b9551c23932cea7126f8192bfe7c2e81d47106845ef26e510f3df981526020017f111958ce9ed58022dd92dea4f1fa9d71cd2ecb0223286102c83ccd1915ec0886815250815260200160405180604001604052807f1fd1e24a915bb67908d76dfd182261d68f99c4dedbd775c7d82beb2823f17f7681526020017f03db18c532e8b2416180d27019c70c8e1f3b4ebf3bc9ce8491615f61efd76ce88152508152508160600181905250600360405190808252806020026020018201604052801561326e57816020015b61325b614265565b8152602001906001900390816132535790505b50816080018190525060405180604001604052807f293fae156bd59d71d843093c1e399419321c60dddc498a5782d4dc8f76185ed281526020017f279f7bc4120d3c76c6eecfe7fc2890bb6d03031c9dc620f942313b850fefa31e81525081608001516000815181106132dd57fe5b602002602001018190525060405180604001604052807f1641a6674d9efbaf2c1f0ead32d0d35bcaceffc6e3b50bede222280151d36add81526020017f2fafcb32fef672b7695d348f26714019d1f168faa250c111ba4b7019e9a5663d815250816080015160018151811061334e57fe5b602002602001018190525060405180604001604052807f2f88ff1d2a28bc1a897d83a0adc780d77cbeeb8e5246ee9db60574bd267bd01881526020017f12be73a952091bab8d471a35c38b840a8ba053eba37824c9010139c85d27e91481525081608001516002815181106133bf57fe5b602002602001018190525090565b6133d561419f565b6133dd61427f565b8360000151816000600381106133ef57fe5b60200201818152505083602001518160016003811061340a57fe5b602002018181525050828160026003811061342157fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461344a5761344c565bfe5b508061345757600080fd5b505092915050565b61346761419f565b61346f6142a1565b83600001518160006004811061348157fe5b60200201818152505083602001518160016004811061349c57fe5b6020020181815250508260000151816002600481106134b757fe5b6020020181815250508260200151816003600481106134d257fe5b602002018181525050600060608360c08460066107d05a03fa905080600081146134fb576134fd565bfe5b508061350857600080fd5b505092915050565b61351861419f565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015613555575060008360200151145b156135795760405180604001604052806000815260200160008152509150506135a5565b6040518060400160405280846000015181526020018285602001518161359b57fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156135e957816020015b6135d6614265565b8152602001906001900390816135ce5790505b5090506060600460405190808252806020026020018201604052801561362957816020015b6136166142c3565b81526020019060019003908161360e5790505b5090508a8260008151811061363a57fe5b6020026020010181905250888260018151811061365357fe5b6020026020010181905250868260028151811061366c57fe5b6020026020010181905250848260038151811061368557fe5b6020026020010181905250898160008151811061369e57fe5b602002602001018190525087816001815181106136b757fe5b602002602001018190525085816002815181106136d057fe5b602002602001018190525083816003815181106136e957fe5b60200260200101819052506136fe8282613b0d565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561375057506000801b8214155b92505050919050565b6137716001826000015461379290919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60006137d483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613d60565b905092915050565b6137e58161285b565b15613858576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f546f6b656e20616c72656164792065786973740000000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506138f1600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061377c565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156139e4576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050613ac4565b600082905060005b60008214613a0e578080600101915050600a8281613a0657fe5b0491506139ec565b6060816040519080825280601f01601f191660200182016040528015613a435781602001600182028038833980820191505090505b50905060006001830390505b60008614613abc57600a8681613a6157fe5b0660300160f81b82828060019003935081518110613a7b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681613ab457fe5b049550613a4f565b819450505050505b919050565b6060613b058383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613e20565b905092915050565b60008151835114613b1d57600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613b5c5781602001602082028038833980820191505090505b50905060008090505b83811015613d0257868181518110613b7957fe5b602002602001015160000151826000600684020181518110613b9757fe5b602002602001018181525050868181518110613baf57fe5b602002602001015160200151826001600684020181518110613bcd57fe5b602002602001018181525050858181518110613be557fe5b602002602001015160000151600160028110613bfd57fe5b6020020151826002600684020181518110613c1457fe5b602002602001018181525050858181518110613c2c57fe5b602002602001015160000151600060028110613c4457fe5b6020020151826003600684020181518110613c5b57fe5b602002602001018181525050858181518110613c7357fe5b602002602001015160200151600160028110613c8b57fe5b6020020151826004600684020181518110613ca257fe5b602002602001018181525050858181518110613cba57fe5b602002602001015160200151600060028110613cd257fe5b6020020151826005600684020181518110613ce957fe5b6020026020010181815250508080600101915050613b65565b50613d0b6142e9565b6000602082602086026020860160086107d05a03fa90508060008114613d3057613d32565bfe5b5080613d3d57600080fd5b600082600060018110613d4c57fe5b602002015114159550505050505092915050565b6000838311158290613e0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613dd2578082015181840152602081019050613db7565b50505050905090810190601f168015613dff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613e7c5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613f0157888181518110613ea857fe5b602001015160f81c60f81b838380600101945081518110613ec557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613e93565b600090505b8751811015613f7457878181518110613f1b57fe5b602001015160f81c60f81b838380600101945081518110613f3857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f06565b600090505b8651811015613fe757868181518110613f8e57fe5b602001015160f81c60f81b838380600101945081518110613fab57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f79565b600090505b855181101561405a5785818151811061400157fe5b602001015160f81c60f81b83838060010194508151811061401e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613fec565b600090505b84518110156140cd5784818151811061407457fe5b602001015160f81c60f81b83838060010194508151811061409157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061405f565b82995050505050505050505095945050505050565b604051806080016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b6040518060600160405280614138614265565b81526020016141456142c3565b8152602001614152614265565b81525090565b6040518060a0016040528061416b614265565b81526020016141786142c3565b81526020016141856142c3565b81526020016141926142c3565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156141e0578183600052602060002091820191016141df919061430b565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061422657805160ff1916838001178555614254565b82800160010185558215614254579182015b82811115614253578251825591602001919060010190614238565b5b509050614261919061430b565b5090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180604001604052806142d6614330565b81526020016142e3614330565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61432d91905b80821115614329576000816000905550600101614311565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe676976656e206164647265737320697320616c7265616479206f776e6572206f662074686520746f6b656e49644e6f7420616c6c6f77656420746f207472616e7366657220746f20636f6e74726163742ea265627a7a72315820a4270c58a062cf5320330ed98106822e2e458bc7026c76c18bf84108c769c4dd64736f6c63430005100032",
  "sourceMap": "301:1746:6:-;;;20490:313:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:10;685:6;;:19;;;;;;;;;;;;;;;;;;2125:5;2115:7;;:15;;;;;;;;;;;;;;;;;;3057:40;2655:10;3076:20;;3057:18;;;:40;;:::i;:::-;5310;5185:10;5329:20;;5310:18;;;:40;;:::i;:::-;13102:51;12708:10;13121:31;;13102:18;;;:51;;:::i;:::-;20668:4;20660:5;:12;;;;;;;;;;;;:::i;:::-;;20692:6;20682:7;:16;;;;;;;;;;;;:::i;:::-;;20724:12;20708:13;:28;;;;;;;;;;;;:::i;:::-;;20747:49;20301:10;20766:29;;20747:18;;;:49;;:::i;:::-;20490:313;;;301:1746:6;;3435:158:4;3525:10;3510:25;;:11;:25;;;;;3502:34;;;;;;3582:4;3546:20;:33;3567:11;3546:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3435:158;:::o;301:1746:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "301:1746:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:1746:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3195:161:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3195:161:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6585:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6585:167:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5893:686;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5893:686:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20980:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20980:88:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:177;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1817:177:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;20890:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20890:84:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13895:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7757:210;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7757:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:5;;;;;;;;;;;;;;;:::i;:::-;;13533:210:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13533:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:5;;;;;;;;;;;;;;;:::i;:::-;;977:654:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;977:654:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;977:654:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;977:654:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;977:654:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;977:654:6;;;;;;;;;;;;;;:::i;:::-;;1858:187;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1858:187:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7973:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7973:162:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14326:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14326:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11394:666:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11394:666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11394:666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11394:666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11394:666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11394:666:7;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5654:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5654:162:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5363:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5363:285:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;468:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7044:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7044:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8141:249;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8141:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8141:249:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8141:249:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8141:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8141:249:4;;;;;;;;;;;;;;;:::i;:::-;;21074:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21074:100:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21180:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21180:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21180:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7578:173;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7578:173:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;984:384;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;984:384:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3195:161;3289:4;3316:20;:33;3337:11;3316:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3309:40;;3195:161;;;:::o;6585:167::-;6644:7;6721:15;:24;6737:7;6721:24;;;;;;;;;;;;;;;;;;;;;6714:31;;6585:167;;;:::o;5893:686::-;6060:11;:20;6072:7;6060:20;;;;;;;;;;;;;;;;;;;;;6054:26;;:2;:26;;;;6033:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6287:36;6304:6;;;;;;;;;;;6312:10;6287:16;:36::i;:::-;:60;;;;6341:6;;;;;;;;;;;6327:20;;:10;:20;;;6287:60;6266:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6485:2;6458:15;:24;6474:7;6458:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6564:7;6552:10;6539:33;;6548:2;6539:33;;;;;;;;;;;;5893:686;;:::o;20980:88::-;21022:13;21054:7;21047:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20980:88;:::o;1817:177::-;871:6;;;;;;;;;;;857:20;;:10;:20;;;849:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:6;1876:7;;:16;;;;;;;;;;;;;;;;;;1906:7;;;;;;;;;;;1902:36;;;1920:18;1927:10;1920:18;;;;;;;;;;;;;;;;;;;;;;1902:36;1953:7;;;;;;;;;;;1948:39;;1967:20;1976:10;1967:20;;;;;;;;;;;;;;;;;;;;;;1948:39;1817:177;:::o;20890:84::-;20930:13;20962:5;20955:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20890:84;:::o;13895:94::-;13939:7;13965:10;:17;;;;13958:24;;13895:94;:::o;7757:210::-;7877:39;7896:10;7908:7;7877:18;:39::i;:::-;7869:48;;;;;;7928:32;7942:4;7948:2;7952:7;7928:13;:32::i;:::-;7757:210;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;13533:210:4:-;13637:7;13676:16;13686:5;13676:9;:16::i;:::-;13668:5;:24;13660:33;;;;;;13710:12;:19;13723:5;13710:19;;;;;;;;;;;;;;;13730:5;13710:26;;;;;;;;;;;;;;;;13703:33;;13533:210;;;;:::o;14929:166:5:-;;;;:::o;977:654:6:-;1191:11;1232:1;1235;1238;1241:5;1215:32;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1215:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1215:32:6;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1215:32:6;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1215:32:6;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1215:32:6;;;1205:43;;;;;;1191:57;;1267:15;:20;1283:3;1267:20;;;;;;;;;;;;;;;;;;;;;1266:21;1258:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1330:17;1350:24;1359:1;1362;1365;1368:5;1350:8;:24::i;:::-;1330:44;;1392:12;1384:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1439:24;;:::i;:::-;1466:34;;;;;;;;1475:3;1466:34;;;;1480:4;1466:34;;;;;;1486:7;1466:34;;;;1495:4;1466:34;;;;;1439:61;;1531:8;1510:9;:18;1520:7;1510:18;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:4;1549:15;:20;1565:3;1549:20;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1591:33;1605:3;1610:4;1616:7;1591:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:654;;;;;;;;;:::o;1858:187::-;1917:4;1941:9;:18;1951:7;1941:18;;;;;;;;;;;:24;;;;;;;;;;;;1933:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2015:23;2026:2;2030:7;2015:10;:23::i;:::-;2008:30;;1858:187;;;;:::o;7973:162:4:-;8089:39;8106:4;8112:2;8116:7;8089:39;;;;;;;;;;;;:16;:39::i;:::-;7973:162;;;:::o;14326:148::-;14384:7;14419:13;:11;:13::i;:::-;14411:5;:21;14403:30;;;;;;14450:10;14461:5;14450:17;;;;;;;;;;;;;;;;14443:24;;14326:148;;;:::o;11394:666:7:-;11562:6;11580:18;;:::i;:::-;11618:27;;;;;;;;11634:1;11636;11634:4;;;;;;;;;;;11618:27;;;;11640:1;11642;11640:4;;;;;;;;;;;11618:27;;;11608:5;:7;;:37;;;;11665:55;;;;;;;;;;;;;;;;11682:1;11684;11682:4;;;;;;;;;;;11687:1;11682:7;;;;;;;;;;;11665:55;;;;11691:1;11693;11691:4;;;;;;;;;;;11696:1;11691:7;;;;;;;;;;;11665:55;;;;;;;;;;;;;;;11702:1;11704;11702:4;;;;;;;;;;;11707:1;11702:7;;;;;;;;;;;11665:55;;;;11711:1;11713;11711:4;;;;;;;;;;;11716:1;11711:7;;;;;;;;;;;11665:55;;;;;;11655:5;:7;;:65;;;;11740:27;;;;;;;;11756:1;11758;11756:4;;;;;;;;;;;11740:27;;;;11762:1;11764;11762:4;;;;;;;;;;;11740:27;;;11730:5;:7;;:37;;;;11778:28;11823:1;11809:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;11809:16:7;;;;11778:47;;11841:9;11853:1;11841:13;;11836:93;11860:12;11856:1;:16;11836:93;;;11910:5;11916:1;11910:8;;;;;;;;;;;11893:11;11905:1;11893:14;;;;;;;;;;;;;:25;;;;;11874:3;;;;;;;11836:93;;;;11972:1;11942:26;11949:11;11962:5;11942:6;:26::i;:::-;:31;11938:116;;;11996:4;11989:11;;;;;;11938:116;12038:5;12031:12;;;;11394:666;;;;;;;:::o;5654:162:4:-;5709:7;5789:11;:20;5801:7;5789:20;;;;;;;;;;;;;;;;;;;;;5782:27;;5654:162;;;:::o;5363:285::-;5418:7;5607:34;:17;:24;5625:5;5607:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5600:41;;5363:285;;;:::o;468:80::-;509:7;535:6;;;;;;;;;;;528:13;;468:80;:::o;7044:213::-;7129:10;7123:16;;:2;:16;;;;7115:25;;;;;;7187:8;7150:18;:30;7169:10;7150:30;;;;;;;;;;;;;;;:34;7181:2;7150:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7237:2;7210:40;;7225:10;7210:40;;;7241:8;7210:40;;;;;;;;;;;;;;;;;;;;;;7044:213;;:::o;8141:249::-;8285:31;8298:4;8304:2;8308:7;8285:12;:31::i;:::-;8334:48;8357:4;8363:2;8367:7;8376:5;8334:22;:48::i;:::-;8326:57;;;;;;8141:249;;;;:::o;21074:100::-;21122:13;21154;21147:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21074:100;:::o;21180:151::-;21238:13;21271:16;21279:7;21271;:16::i;:::-;21263:25;;;;;;21305:10;:19;21316:7;21305:19;;;;;;;;;;;21298:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21180:151;;;:::o;7578:173::-;7682:4;7709:18;:25;7728:5;7709:25;;;;;;;;;;;;;;;:35;7735:8;7709:35;;;;;;;;;;;;;;;;;;;;;;;;;7702:42;;7578:173;;;;:::o;984:384::-;871:6;;;;;;;;;;;857:20;;:10;:20;;;849:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:1;1202:22;;:8;:22;;;;1194:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1254:16;1273:6;;;;;;;;;;;1254:25;;1298:8;1289:6;;:17;;;;;;;;;;;;;;;;;;1321:40;1342:8;1352;1321:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:1;984:384;:::o;9096:298::-;9205:4;9225:13;9241:16;9249:7;9241;:16::i;:::-;9225:32;;9286:5;9275:16;;:7;:16;;;:63;;;;9331:7;9307:31;;:20;9319:7;9307:11;:20::i;:::-;:31;;;9275:63;:111;;;;9354:32;9371:5;9378:7;9354:16;:32::i;:::-;9275:111;9267:120;;;9096:298;;;;:::o;14849:269::-;14964:38;14984:4;14990:2;14994:7;14964:19;:38::i;:::-;15013:47;15046:4;15052:7;15013:32;:47::i;:::-;15071:40;15099:2;15103:7;15071:27;:40::i;:::-;14849:269;;;:::o;22816:280::-;22936:4;871:6;;;;;;;;;;;857:20;;:10;:20;;;849:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23019:18;23025:2;23029:7;23019:5;:18::i;:::-;23047:21;23060:7;23047:12;:21::i;:::-;23085:4;23078:11;;22816:280;;;;:::o;10272:1116:7:-;10379:7;10402:26;10431:77;10402:106;;10518:22;;:::i;:::-;10543:14;:12;:14::i;:::-;10518:39;;10595:2;:12;;;:19;10590:1;10575:5;:12;:16;:39;10567:48;;;;;;10672:27;;:::i;:::-;10702:21;;;;;;;;10718:1;10702:21;;;;10721:1;10702:21;;;10672:51;;10738:9;10750:1;10738:13;;10733:246;10757:5;:12;10753:1;:16;10733:246;;;10809:18;10798:5;10804:1;10798:8;;;;;;;;;;;;;;:29;10790:38;;;;;;10849:119;10883:4;10905:49;10924:2;:12;;;10941:1;10937;:5;10924:19;;;;;;;;;;;;;;10945:5;10951:1;10945:8;;;;;;;;;;;;;;10905:18;:49::i;:::-;10849:16;:119::i;:::-;10842:126;;10771:3;;;;;;;10733:246;;;;10995:39;11012:4;11018:2;:12;;;11031:1;11018:15;;;;;;;;;;;;;;10995:16;:39::i;:::-;10988:46;;11062:282;11100:5;:7;;;11125:5;:7;;;11150:20;11165:4;11150:14;:20::i;:::-;11188:2;:8;;;11214:23;11229:5;:7;;;11214:14;:23::i;:::-;11255:2;:8;;;11281:24;11296:2;:8;;;11281:14;:24::i;:::-;11323:2;:7;;;11062:20;:282::i;:::-;11044:319;;11362:1;11355:8;;;;;;;11044:319;11380:1;11373:8;;;;;10272:1116;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11469:431:4:-;11620:4;11641:15;:2;:13;;;:15::i;:::-;11636:58;;11679:4;11672:11;;;;11636:58;11704:13;11736:2;11720:36;;;11770:10;11794:4;11812:7;11833:5;11720:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11720:128:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11720:128:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11720:128:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11720:128:4;;;;;;;;;;;;;;;;11704:144;;4323:10;11876:16;;11866:26;;;:6;:26;;;;11858:35;;;11469:431;;;;;;;:::o;8584:152::-;8641:4;8657:13;8673:11;:20;8685:7;8673:20;;;;;;;;;;;;;;;;;;;;;8657:36;;8727:1;8710:19;;:5;:19;;;;8703:26;;;8584:152;;;:::o;10192:749::-;10393:11;:20;10405:7;10393:20;;;;;;;;;;;;;;;;;;;;;10385:28;;:4;:28;;;10377:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10521:15;:2;:13;;;:15::i;:::-;10520:16;10512:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10655:1;10620:15;:24;10636:7;10620:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10765:2;10742:11;:20;10754:7;10742:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10777:35;:17;:23;10795:4;10777:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10822:33;:17;:21;10840:2;10822:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10926:7;10922:2;10907:27;;10916:4;10907:27;;;;;;;;;;;;10192:749;;;:::o;17373:1140::-;17647:22;17672:32;17702:1;17672:12;:18;17685:4;17672:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17647:57;;17714:18;17735:17;:26;17753:7;17735:26;;;;;;;;;;;;17714:47;;17879:14;17865:10;:28;17861:323;;17909:19;17931:12;:18;17944:4;17931:18;;;;;;;;;;;;;;;17950:14;17931:34;;;;;;;;;;;;;;;;17909:56;;18013:11;17980:12;:18;17993:4;17980:18;;;;;;;;;;;;;;;17999:10;17980:30;;;;;;;;;;;;;;;:44;;;;18129:10;18096:17;:30;18114:11;18096:30;;;;;;;;;;;:43;;;;17861:323;;18270:12;:18;18283:4;18270:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17373:1140;;;;:::o;16219:183::-;16332:12;:16;16345:2;16332:16;;;;;;;;;;;;;;;:23;;;;16303:17;:26;16321:7;16303:26;;;;;;;;;;;:52;;;;16365:12;:16;16378:2;16365:16;;;;;;;;;;;;;;;16387:7;16365:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16365:30:4;;;;;;;;;;;;;;;;;;;;;;16219:183;;:::o;15373:196::-;15436:24;15448:2;15452:7;15436:11;:24::i;:::-;15471:40;15499:2;15503:7;15471:27;:40::i;:::-;15522;15554:7;15522:31;:40::i;:::-;15373:196;;:::o;21421:591::-;21538:16;21546:7;21538;:16::i;:::-;21530:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21962:43;21972:13;21962:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21987:17;21996:7;21987:8;:17::i;:::-;21962:9;:43::i;:::-;21940:10;:19;21951:7;21940:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21421:591;:::o;7105:3161:7:-;7152:22;;:::i;:::-;7197:263;;;;;;;;7251:66;7197:263;;;;7370:66;7197:263;;;7186:2;:8;;:274;;;;7480:605;;;;;;;;;;;;;;;;7556:66;7480:605;;;;7687:66;7480:605;;;;;;;;;;;;;;;7846:66;7480:605;;;;7977:66;7480:605;;;;;;7470:2;:7;;:615;;;;8106:605;;;;;;;;;;;;;;;;8182:66;8106:605;;;;8313:66;8106:605;;;;;;;;;;;;;;;8472:66;8106:605;;;;8603:66;8106:605;;;;;;8095:2;:8;;:616;;;;8732:605;;;;;;;;;;;;;;;;8808:66;8732:605;;;;8939:66;8732:605;;;;;;;;;;;;;;;9098:66;8732:605;;;;9229:66;8732:605;;;;;;8721:2;:8;;:616;;;;9384:1;9362:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9347:2;:12;;:39;;;;9414:263;;;;;;;;9468:66;9414:263;;;;9587:66;9414:263;;;9396:2;:12;;;9409:1;9396:15;;;;;;;;;;;;;:281;;;;9705:263;;;;;;;;9759:66;9705:263;;;;9878:66;9705:263;;;9687:2;:12;;;9700:1;9687:15;;;;;;;;;;;;;:281;;;;9996:263;;;;;;;;10050:66;9996:263;;;;10169:66;9996:263;;;9978:2;:12;;;9991:1;9978:15;;;;;;;;;;;;;:281;;;;7105:3161;:::o;3274:527::-;3370:16;;:::i;:::-;3402:23;;:::i;:::-;3446:1;:3;;;3435:5;3441:1;3435:8;;;;;;;;;;:14;;;;;3470:1;:3;;;3459:5;3465:1;3459:8;;;;;;;;;;:14;;;;;3494:1;3483:5;3489:1;3483:8;;;;;;;;;;:12;;;;;3505;3609:4;3606:1;3600:4;3593:5;3590:1;3583:4;3576:5;3572:16;3561:53;3550:64;;3691:7;3716:1;3711:48;;;;3684:75;;3711:48;3736:9;3684:75;;3786:7;3778:16;;;;;;3274:527;;;;;;:::o;2554:564::-;2657:16;;:::i;:::-;2689:23;;:::i;:::-;2733:2;:4;;;2722:5;2728:1;2722:8;;;;;;;;;;:15;;;;;2758:2;:4;;;2747:5;2753:1;2747:8;;;;;;;;;;:15;;;;;2783:2;:4;;;2772:5;2778:1;2772:8;;;;;;;;;;:15;;;;;2808:2;:4;;;2797:5;2803:1;2797:8;;;;;;;;;;:15;;;;;2822:12;2926:4;2923:1;2917:4;2910:5;2907:1;2900:4;2893:5;2889:16;2878:53;2867:64;;3008:7;3033:1;3028:48;;;;3001:75;;3028:48;3053:9;3001:75;;3103:7;3095:16;;;;;;2554:564;;;;;;:::o;2171:331::-;2228:14;;:::i;:::-;2306:9;2318:77;2306:89;;2416:1;2409;:3;;;:8;:20;;;;;2428:1;2421;:3;;;:8;2409:20;2405:46;;;2438:13;;;;;;;;2446:1;2438:13;;;;2449:1;2438:13;;;2431:20;;;;;2405:46;2468:27;;;;;;;;2476:1;:3;;;2468:27;;;;2492:1;2486;:3;;;:7;;;;;;2481:1;:13;2468:27;;;2461:34;;;2171:331;;;;:::o;6185:568::-;6452:4;6468:19;6504:1;6490:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6468:38;;6516:19;6552:1;6538:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6516:38;;6572:2;6564;6567:1;6564:5;;;;;;;;;;;;;:10;;;;6592:2;6584;6587:1;6584:5;;;;;;;;;;;;;:10;;;;6612:2;6604;6607:1;6604:5;;;;;;;;;;;;;:10;;;;6632:2;6624;6627:1;6624:5;;;;;;;;;;;;;:10;;;;6652:2;6644;6647:1;6644:5;;;;;;;;;;;;;:10;;;;6672:2;6664;6667:1;6664:5;;;;;;;;;;;;;:10;;;;6692:2;6684;6687:1;6684:5;;;;;;;;;;;;;:10;;;;6712:2;6704;6707:1;6704:5;;;;;;;;;;;;;:10;;;;6731:15;6739:2;6743;6731:7;:15::i;:::-;6724:22;;;;6185:568;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;9551:442:4:-;9706:16;9714:7;9706;:16::i;:::-;9705:17;9697:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9857:2;9834:11;:20;9846:7;9834:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9869:33;:17;:21;9887:2;9869:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9978:7;9974:2;9953:33;;9962:10;9953:33;;;;;;;;;;;;9551:442;;:::o;16597:161::-;16700:10;:17;;;;16673:15;:24;16689:7;16673:24;;;;;;;;;;;:44;;;;16727:10;16743:7;16727:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16727:24:4;;;;;;;;;;;;;;;;;;;;;;16597:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;4013:1111:7:-;4119:4;4160:2;:9;4147:2;:9;:22;4139:31;;;;;;4180:16;4199:2;:9;4180:28;;4218:17;4249:1;4238:8;:12;4218:32;;4260:22;4299:9;4285:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4285:24:7;;;;4260:49;;4324:9;4336:1;4324:13;;4319:302;4343:8;4339:1;:12;4319:302;;;4391:2;4394:1;4391:5;;;;;;;;;;;;;;:7;;;4372:5;4386:1;4382;4378;:5;:9;4372:16;;;;;;;;;;;;;:26;;;;;4431:2;4434:1;4431:5;;;;;;;;;;;;;;:7;;;4412:5;4426:1;4422;4418;:5;:9;4412:16;;;;;;;;;;;;;:26;;;;;4471:2;4474:1;4471:5;;;;;;;;;;;;;;:7;;;4479:1;4471:10;;;;;;;;;;;4452:5;4466:1;4462;4458;:5;:9;4452:16;;;;;;;;;;;;;:29;;;;;4514:2;4517:1;4514:5;;;;;;;;;;;;;;:7;;;4522:1;4514:10;;;;;;;;;;;4495:5;4509:1;4505;4501;:5;:9;4495:16;;;;;;;;;;;;;:29;;;;;4557:2;4560:1;4557:5;;;;;;;;;;;;;;:7;;;4565:1;4557:10;;;;;;;;;;;4538:5;4552:1;4548;4544;:5;:9;4538:16;;;;;;;;;;;;;:29;;;;;4600:2;4603:1;4600:5;;;;;;;;;;;;;;:7;;;4608:1;4600:10;;;;;;;;;;;4581:5;4595:1;4591;4587;:5;:9;4581:16;;;;;;;;;;;;;:29;;;;;4353:3;;;;;;;4319:302;;;;4630:21;;:::i;:::-;4661:12;4891:4;4870:3;4847:4;4836:9;4832:20;4809:4;4802:5;4798:16;4779:1;4756:4;4749:5;4745:16;4717:192;4706:203;;4986:7;5011:1;5006:48;;;;4979:75;;5006:48;5031:9;4979:75;;5081:7;5073:16;;;;;;5116:1;5106:3;5110:1;5106:6;;;;;;;;;;;:11;;5099:18;;;;;;;4013:1111;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;301:1746:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:1746:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:1746:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:1746:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:1746:6;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./ERC721Mintable.sol\";\nimport \"./verifier.sol\";\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\ncontract SolnSquareVerifier is Verifier, KOKOToken {\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        bytes32 index;\n        address addr;\n        uint256 tokenId;\n        bool exist;\n    }\n    // TODO define an array of the above struct\n    mapping(uint256 => Solution) solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => bool) private uniqueSolutions;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(bytes32 key, address addr, uint256 tokenId);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(\n        address addr,\n        uint256 tokenId,\n        uint256[2] memory a,\n        uint256[2][2] memory b,\n        uint256[2] memory c,\n        uint256[2] memory input\n    ) public {\n        bytes32 key = keccak256(abi.encodePacked(a, b, c, input));\n        require(!uniqueSolutions[key], \"solution already used before\");\n        bool isValidProof = verifyTx(a, b, c, input);\n        require(isValidProof, \"proof is not valid!\");\n\n        Solution memory solution = Solution(key, addr, tokenId, true);\n        solutions[tokenId] = solution;\n        uniqueSolutions[key] = true;\n        emit SolutionAdded(key, addr, tokenId);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mint(address to, uint256 tokenId) public returns (bool) {\n        require(solutions[tokenId].exist, \"solution already used before\");\n        return super.mint(to, tokenId);\n    }\n}\n",
  "sourcePath": "/Users/jinwookbaek/Project/blockchain/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7840
      ]
    },
    "id": 7841,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7697,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7698,
        "nodeType": "ImportDirective",
        "scope": 7841,
        "sourceUnit": 1428,
        "src": "141:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7699,
        "nodeType": "ImportDirective",
        "scope": 7841,
        "sourceUnit": 8835,
        "src": "172:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7700,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8834,
              "src": "332:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8834",
                "typeString": "contract Verifier"
              }
            },
            "id": 7701,
            "nodeType": "InheritanceSpecifier",
            "src": "332:8:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7702,
              "name": "KOKOToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1427,
              "src": "342:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KOKOToken_$1427",
                "typeString": "contract KOKOToken"
              }
            },
            "id": 7703,
            "nodeType": "InheritanceSpecifier",
            "src": "342:9:6"
          }
        ],
        "contractDependencies": [
          401,
          468,
          514,
          990,
          1288,
          1398,
          1427,
          7695,
          8834
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7840,
        "linearizedBaseContracts": [
          7840,
          1427,
          1398,
          7695,
          1288,
          990,
          514,
          468,
          401,
          8834
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7712,
            "members": [
              {
                "constant": false,
                "id": 7705,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7712,
                "src": "458:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7704,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7707,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7712,
                "src": "481:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7706,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "481:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7709,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7712,
                "src": "503:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7708,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "503:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7711,
                "name": "exist",
                "nodeType": "VariableDeclaration",
                "scope": 7712,
                "src": "528:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7710,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7840,
            "src": "432:113:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7716,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7840,
            "src": "598:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7712_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7715,
              "keyType": {
                "id": 7713,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "606:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "598:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7712_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7714,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7712,
                "src": "617:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7712_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7720,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7840,
            "src": "708:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7719,
              "keyType": {
                "id": 7717,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "716:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "708:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7718,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "727:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7728,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7722,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7728,
                  "src": "844:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7721,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7724,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7728,
                  "src": "857:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7726,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7728,
                  "src": "871:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "843:44:6"
            },
            "src": "824:64:6"
          },
          {
            "body": {
              "id": 7814,
              "nodeType": "Block",
              "src": "1181:450:6",
              "statements": [
                {
                  "assignments": [
                    7754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7754,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7814,
                      "src": "1191:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7753,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1191:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7764,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7758,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7736,
                            "src": "1232:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7759,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7742,
                            "src": "1235:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7760,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7746,
                            "src": "1238:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7761,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7750,
                            "src": "1241:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7756,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8836,
                            "src": "1215:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1215:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1215:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7755,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8843,
                      "src": "1205:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1191:57:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1266:21:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7766,
                            "name": "uniqueSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7720,
                            "src": "1267:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7768,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7767,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7754,
                            "src": "1283:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1267:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f6c7574696f6e20616c72656164792075736564206265666f7265",
                        "id": 7770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1289:30:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_706ccb3a6105f6845f8567f1e4c25d6791622a23da4eeb3a321bac64f8ad9f9b",
                          "typeString": "literal_string \"solution already used before\""
                        },
                        "value": "solution already used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_706ccb3a6105f6845f8567f1e4c25d6791622a23da4eeb3a321bac64f8ad9f9b",
                          "typeString": "literal_string \"solution already used before\""
                        }
                      ],
                      "id": 7765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8852,
                        8853
                      ],
                      "referencedDeclaration": 8853,
                      "src": "1258:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:62:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7772,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:62:6"
                },
                {
                  "assignments": [
                    7774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7774,
                      "name": "isValidProof",
                      "nodeType": "VariableDeclaration",
                      "scope": 7814,
                      "src": "1330:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7773,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1330:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7781,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7776,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7736,
                        "src": "1359:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7777,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7742,
                        "src": "1362:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7778,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7746,
                        "src": "1365:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7779,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7750,
                        "src": "1368:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7775,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8833,
                      "src": "1350:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)"
                      }
                    },
                    "id": 7780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1330:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7783,
                        "name": "isValidProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7774,
                        "src": "1392:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70726f6f66206973206e6f742076616c696421",
                        "id": 7784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1406:21:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bc74e83dafeaf71f0468c0b757a5f0e6581ba83647a740e84bd7fce8afed0bf",
                          "typeString": "literal_string \"proof is not valid!\""
                        },
                        "value": "proof is not valid!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bc74e83dafeaf71f0468c0b757a5f0e6581ba83647a740e84bd7fce8afed0bf",
                          "typeString": "literal_string \"proof is not valid!\""
                        }
                      ],
                      "id": 7782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8852,
                        8853
                      ],
                      "referencedDeclaration": 8853,
                      "src": "1384:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7786,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:44:6"
                },
                {
                  "assignments": [
                    7788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7788,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7814,
                      "src": "1439:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7712_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7787,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7712,
                        "src": "1439:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7712_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7795,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7790,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7754,
                        "src": "1475:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7791,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "1480:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7792,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7732,
                        "src": "1486:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 7793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1495:4:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7789,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7712,
                      "src": "1466:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7712_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7712_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1439:61:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7796,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7716,
                        "src": "1510:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7712_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7798,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7797,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7732,
                        "src": "1520:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1510:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7712_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7799,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7788,
                      "src": "1531:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7712_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1510:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7712_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7801,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:29:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7802,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7720,
                        "src": "1549:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7804,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7803,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7754,
                        "src": "1565:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1549:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1572:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1549:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7807,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:27:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7809,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7754,
                        "src": "1605:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7810,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "1610:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7811,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7732,
                        "src": "1616:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7808,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7728,
                      "src": "1591:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 7812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7813,
                  "nodeType": "EmitStatement",
                  "src": "1586:38:6"
                }
              ]
            },
            "documentation": null,
            "id": 7815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7730,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7815,
                  "src": "1007:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7732,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7815,
                  "src": "1029:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7736,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7815,
                  "src": "1054:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7733,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1054:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7735,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1062:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1054:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7742,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7815,
                  "src": "1083:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7737,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1083:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7739,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1091:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1083:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7741,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1094:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1083:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7746,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7815,
                  "src": "1115:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7743,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1115:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7745,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1123:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1115:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7750,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7815,
                  "src": "1144:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7747,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1144:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7749,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1152:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1144:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "997:176:6"
            },
            "returnParameters": {
              "id": 7752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:0:6"
            },
            "scope": 7840,
            "src": "977:654:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7838,
              "nodeType": "Block",
              "src": "1923:122:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7825,
                            "name": "solutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7716,
                            "src": "1941:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7712_storage_$",
                              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7827,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7826,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7819,
                            "src": "1951:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1941:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7712_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7828,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7711,
                        "src": "1941:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f6c7574696f6e20616c72656164792075736564206265666f7265",
                        "id": 7829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1967:30:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_706ccb3a6105f6845f8567f1e4c25d6791622a23da4eeb3a321bac64f8ad9f9b",
                          "typeString": "literal_string \"solution already used before\""
                        },
                        "value": "solution already used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_706ccb3a6105f6845f8567f1e4c25d6791622a23da4eeb3a321bac64f8ad9f9b",
                          "typeString": "literal_string \"solution already used before\""
                        }
                      ],
                      "id": 7824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8852,
                        8853
                      ],
                      "referencedDeclaration": 8853,
                      "src": "1933:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:65:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7831,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:65:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7834,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7817,
                        "src": "2026:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7835,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7819,
                        "src": "2030:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7832,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8902,
                        "src": "2015:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7840",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1426,
                      "src": "2015:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7823,
                  "id": 7837,
                  "nodeType": "Return",
                  "src": "2008:30:6"
                }
              ]
            },
            "documentation": null,
            "id": 7839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7817,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7839,
                  "src": "1872:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7819,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7839,
                  "src": "1884:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1871:29:6"
            },
            "returnParameters": {
              "id": 7823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7822,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7839,
                  "src": "1917:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7821,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1917:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1916:6:6"
            },
            "scope": 7840,
            "src": "1858:187:6",
            "stateMutability": "nonpayable",
            "superFunction": 1426,
            "visibility": "public"
          }
        ],
        "scope": 7841,
        "src": "301:1746:6"
      }
    ],
    "src": "0:2048:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7840
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7697,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "SourceUnit": 1428,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7841,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7698,
        "name": "ImportDirective",
        "src": "141:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 8835,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7841,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7699,
        "name": "ImportDirective",
        "src": "172:24:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            401,
            468,
            514,
            990,
            1288,
            1398,
            1427,
            7695,
            8834
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7840,
            1427,
            1398,
            7695,
            1288,
            990,
            514,
            468,
            401,
            8834
          ],
          "name": "SolnSquareVerifier",
          "scope": 7841
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8834,
                  "type": "contract Verifier"
                },
                "id": 7700,
                "name": "UserDefinedTypeName",
                "src": "332:8:6"
              }
            ],
            "id": 7701,
            "name": "InheritanceSpecifier",
            "src": "332:8:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "KOKOToken",
                  "referencedDeclaration": 1427,
                  "type": "contract KOKOToken"
                },
                "id": 7702,
                "name": "UserDefinedTypeName",
                "src": "342:9:6"
              }
            ],
            "id": 7703,
            "name": "InheritanceSpecifier",
            "src": "342:9:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7840,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7712,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7704,
                    "name": "ElementaryTypeName",
                    "src": "458:7:6"
                  }
                ],
                "id": 7705,
                "name": "VariableDeclaration",
                "src": "458:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "addr",
                  "scope": 7712,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7706,
                    "name": "ElementaryTypeName",
                    "src": "481:7:6"
                  }
                ],
                "id": 7707,
                "name": "VariableDeclaration",
                "src": "481:12:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "tokenId",
                  "scope": 7712,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7708,
                    "name": "ElementaryTypeName",
                    "src": "503:7:6"
                  }
                ],
                "id": 7709,
                "name": "VariableDeclaration",
                "src": "503:15:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "exist",
                  "scope": 7712,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7710,
                    "name": "ElementaryTypeName",
                    "src": "528:4:6"
                  }
                ],
                "id": 7711,
                "name": "VariableDeclaration",
                "src": "528:10:6"
              }
            ],
            "id": 7712,
            "name": "StructDefinition",
            "src": "432:113:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7840,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7713,
                    "name": "ElementaryTypeName",
                    "src": "606:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7712,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7714,
                    "name": "UserDefinedTypeName",
                    "src": "617:8:6"
                  }
                ],
                "id": 7715,
                "name": "Mapping",
                "src": "598:28:6"
              }
            ],
            "id": 7716,
            "name": "VariableDeclaration",
            "src": "598:38:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7840,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => bool)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7717,
                    "name": "ElementaryTypeName",
                    "src": "716:7:6"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7718,
                    "name": "ElementaryTypeName",
                    "src": "727:4:6"
                  }
                ],
                "id": 7719,
                "name": "Mapping",
                "src": "708:24:6"
              }
            ],
            "id": 7720,
            "name": "VariableDeclaration",
            "src": "708:48:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "key",
                      "scope": 7728,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7721,
                        "name": "ElementaryTypeName",
                        "src": "844:7:6"
                      }
                    ],
                    "id": 7722,
                    "name": "VariableDeclaration",
                    "src": "844:11:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "addr",
                      "scope": 7728,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7723,
                        "name": "ElementaryTypeName",
                        "src": "857:7:6"
                      }
                    ],
                    "id": 7724,
                    "name": "VariableDeclaration",
                    "src": "857:12:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "tokenId",
                      "scope": 7728,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7725,
                        "name": "ElementaryTypeName",
                        "src": "871:7:6"
                      }
                    ],
                    "id": 7726,
                    "name": "VariableDeclaration",
                    "src": "871:15:6"
                  }
                ],
                "id": 7727,
                "name": "ParameterList",
                "src": "843:44:6"
              }
            ],
            "id": 7728,
            "name": "EventDefinition",
            "src": "824:64:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7840,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "addr",
                      "scope": 7815,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7729,
                        "name": "ElementaryTypeName",
                        "src": "1007:7:6"
                      }
                    ],
                    "id": 7730,
                    "name": "VariableDeclaration",
                    "src": "1007:12:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7815,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7731,
                        "name": "ElementaryTypeName",
                        "src": "1029:7:6"
                      }
                    ],
                    "id": 7732,
                    "name": "VariableDeclaration",
                    "src": "1029:15:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7815,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7733,
                            "name": "ElementaryTypeName",
                            "src": "1054:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7734,
                            "name": "Literal",
                            "src": "1062:1:6"
                          }
                        ],
                        "id": 7735,
                        "name": "ArrayTypeName",
                        "src": "1054:10:6"
                      }
                    ],
                    "id": 7736,
                    "name": "VariableDeclaration",
                    "src": "1054:19:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7815,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 7737,
                                "name": "ElementaryTypeName",
                                "src": "1083:7:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7738,
                                "name": "Literal",
                                "src": "1091:1:6"
                              }
                            ],
                            "id": 7739,
                            "name": "ArrayTypeName",
                            "src": "1083:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7740,
                            "name": "Literal",
                            "src": "1094:1:6"
                          }
                        ],
                        "id": 7741,
                        "name": "ArrayTypeName",
                        "src": "1083:13:6"
                      }
                    ],
                    "id": 7742,
                    "name": "VariableDeclaration",
                    "src": "1083:22:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7815,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7743,
                            "name": "ElementaryTypeName",
                            "src": "1115:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7744,
                            "name": "Literal",
                            "src": "1123:1:6"
                          }
                        ],
                        "id": 7745,
                        "name": "ArrayTypeName",
                        "src": "1115:10:6"
                      }
                    ],
                    "id": 7746,
                    "name": "VariableDeclaration",
                    "src": "1115:19:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7815,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7747,
                            "name": "ElementaryTypeName",
                            "src": "1144:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7748,
                            "name": "Literal",
                            "src": "1152:1:6"
                          }
                        ],
                        "id": 7749,
                        "name": "ArrayTypeName",
                        "src": "1144:10:6"
                      }
                    ],
                    "id": 7750,
                    "name": "VariableDeclaration",
                    "src": "1144:23:6"
                  }
                ],
                "id": 7751,
                "name": "ParameterList",
                "src": "997:176:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7752,
                "name": "ParameterList",
                "src": "1181:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7754
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7814,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7753,
                            "name": "ElementaryTypeName",
                            "src": "1191:7:6"
                          }
                        ],
                        "id": 7754,
                        "name": "VariableDeclaration",
                        "src": "1191:11:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8843,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7755,
                            "name": "Identifier",
                            "src": "1205:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8836,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7756,
                                    "name": "Identifier",
                                    "src": "1215:3:6"
                                  }
                                ],
                                "id": 7757,
                                "name": "MemberAccess",
                                "src": "1215:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7736,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7758,
                                "name": "Identifier",
                                "src": "1232:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7742,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7759,
                                "name": "Identifier",
                                "src": "1235:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7746,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7760,
                                "name": "Identifier",
                                "src": "1238:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7750,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7761,
                                "name": "Identifier",
                                "src": "1241:5:6"
                              }
                            ],
                            "id": 7762,
                            "name": "FunctionCall",
                            "src": "1215:32:6"
                          }
                        ],
                        "id": 7763,
                        "name": "FunctionCall",
                        "src": "1205:43:6"
                      }
                    ],
                    "id": 7764,
                    "name": "VariableDeclarationStatement",
                    "src": "1191:57:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_706ccb3a6105f6845f8567f1e4c25d6791622a23da4eeb3a321bac64f8ad9f9b",
                                  "typeString": "literal_string \"solution already used before\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8852,
                                8853
                              ],
                              "referencedDeclaration": 8853,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7765,
                            "name": "Identifier",
                            "src": "1258:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7720,
                                      "type": "mapping(bytes32 => bool)",
                                      "value": "uniqueSolutions"
                                    },
                                    "id": 7766,
                                    "name": "Identifier",
                                    "src": "1267:15:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7754,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7767,
                                    "name": "Identifier",
                                    "src": "1283:3:6"
                                  }
                                ],
                                "id": 7768,
                                "name": "IndexAccess",
                                "src": "1267:20:6"
                              }
                            ],
                            "id": 7769,
                            "name": "UnaryOperation",
                            "src": "1266:21:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "736f6c7574696f6e20616c72656164792075736564206265666f7265",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"solution already used before\"",
                              "value": "solution already used before"
                            },
                            "id": 7770,
                            "name": "Literal",
                            "src": "1289:30:6"
                          }
                        ],
                        "id": 7771,
                        "name": "FunctionCall",
                        "src": "1258:62:6"
                      }
                    ],
                    "id": 7772,
                    "name": "ExpressionStatement",
                    "src": "1258:62:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7774
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "isValidProof",
                          "scope": 7814,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7773,
                            "name": "ElementaryTypeName",
                            "src": "1330:4:6"
                          }
                        ],
                        "id": 7774,
                        "name": "VariableDeclaration",
                        "src": "1330:17:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                  "typeString": "uint256[2] memory[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8833,
                              "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)",
                              "value": "verifyTx"
                            },
                            "id": 7775,
                            "name": "Identifier",
                            "src": "1350:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7736,
                              "type": "uint256[2] memory",
                              "value": "a"
                            },
                            "id": 7776,
                            "name": "Identifier",
                            "src": "1359:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7742,
                              "type": "uint256[2] memory[2] memory",
                              "value": "b"
                            },
                            "id": 7777,
                            "name": "Identifier",
                            "src": "1362:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7746,
                              "type": "uint256[2] memory",
                              "value": "c"
                            },
                            "id": 7778,
                            "name": "Identifier",
                            "src": "1365:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7750,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7779,
                            "name": "Identifier",
                            "src": "1368:5:6"
                          }
                        ],
                        "id": 7780,
                        "name": "FunctionCall",
                        "src": "1350:24:6"
                      }
                    ],
                    "id": 7781,
                    "name": "VariableDeclarationStatement",
                    "src": "1330:44:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4bc74e83dafeaf71f0468c0b757a5f0e6581ba83647a740e84bd7fce8afed0bf",
                                  "typeString": "literal_string \"proof is not valid!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8852,
                                8853
                              ],
                              "referencedDeclaration": 8853,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7782,
                            "name": "Identifier",
                            "src": "1384:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7774,
                              "type": "bool",
                              "value": "isValidProof"
                            },
                            "id": 7783,
                            "name": "Identifier",
                            "src": "1392:12:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "70726f6f66206973206e6f742076616c696421",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"proof is not valid!\"",
                              "value": "proof is not valid!"
                            },
                            "id": 7784,
                            "name": "Literal",
                            "src": "1406:21:6"
                          }
                        ],
                        "id": 7785,
                        "name": "FunctionCall",
                        "src": "1384:44:6"
                      }
                    ],
                    "id": 7786,
                    "name": "ExpressionStatement",
                    "src": "1384:44:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7788
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7814,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7712,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7787,
                            "name": "UserDefinedTypeName",
                            "src": "1439:8:6"
                          }
                        ],
                        "id": 7788,
                        "name": "VariableDeclaration",
                        "src": "1439:24:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7712,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7789,
                            "name": "Identifier",
                            "src": "1466:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7754,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7790,
                            "name": "Identifier",
                            "src": "1475:3:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7730,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 7791,
                            "name": "Identifier",
                            "src": "1480:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7732,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7792,
                            "name": "Identifier",
                            "src": "1486:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7793,
                            "name": "Literal",
                            "src": "1495:4:6"
                          }
                        ],
                        "id": 7794,
                        "name": "FunctionCall",
                        "src": "1466:34:6"
                      }
                    ],
                    "id": 7795,
                    "name": "VariableDeclarationStatement",
                    "src": "1439:61:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7716,
                                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutions"
                                },
                                "id": 7796,
                                "name": "Identifier",
                                "src": "1510:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7732,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 7797,
                                "name": "Identifier",
                                "src": "1520:7:6"
                              }
                            ],
                            "id": 7798,
                            "name": "IndexAccess",
                            "src": "1510:18:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7788,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7799,
                            "name": "Identifier",
                            "src": "1531:8:6"
                          }
                        ],
                        "id": 7800,
                        "name": "Assignment",
                        "src": "1510:29:6"
                      }
                    ],
                    "id": 7801,
                    "name": "ExpressionStatement",
                    "src": "1510:29:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7720,
                                  "type": "mapping(bytes32 => bool)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7802,
                                "name": "Identifier",
                                "src": "1549:15:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7754,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7803,
                                "name": "Identifier",
                                "src": "1565:3:6"
                              }
                            ],
                            "id": 7804,
                            "name": "IndexAccess",
                            "src": "1549:20:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7805,
                            "name": "Literal",
                            "src": "1572:4:6"
                          }
                        ],
                        "id": 7806,
                        "name": "Assignment",
                        "src": "1549:27:6"
                      }
                    ],
                    "id": 7807,
                    "name": "ExpressionStatement",
                    "src": "1549:27:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7728,
                              "type": "function (bytes32,address,uint256)",
                              "value": "SolutionAdded"
                            },
                            "id": 7808,
                            "name": "Identifier",
                            "src": "1591:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7754,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7809,
                            "name": "Identifier",
                            "src": "1605:3:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7730,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 7810,
                            "name": "Identifier",
                            "src": "1610:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7732,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7811,
                            "name": "Identifier",
                            "src": "1616:7:6"
                          }
                        ],
                        "id": 7812,
                        "name": "FunctionCall",
                        "src": "1591:33:6"
                      }
                    ],
                    "id": 7813,
                    "name": "EmitStatement",
                    "src": "1586:38:6"
                  }
                ],
                "id": 7814,
                "name": "Block",
                "src": "1181:450:6"
              }
            ],
            "id": 7815,
            "name": "FunctionDefinition",
            "src": "977:654:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 7840,
              "stateMutability": "nonpayable",
              "superFunction": 1426,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7839,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7816,
                        "name": "ElementaryTypeName",
                        "src": "1872:7:6"
                      }
                    ],
                    "id": 7817,
                    "name": "VariableDeclaration",
                    "src": "1872:10:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7839,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7818,
                        "name": "ElementaryTypeName",
                        "src": "1884:7:6"
                      }
                    ],
                    "id": 7819,
                    "name": "VariableDeclaration",
                    "src": "1884:15:6"
                  }
                ],
                "id": 7820,
                "name": "ParameterList",
                "src": "1871:29:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7839,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7821,
                        "name": "ElementaryTypeName",
                        "src": "1917:4:6"
                      }
                    ],
                    "id": 7822,
                    "name": "VariableDeclaration",
                    "src": "1917:4:6"
                  }
                ],
                "id": 7823,
                "name": "ParameterList",
                "src": "1916:6:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_706ccb3a6105f6845f8567f1e4c25d6791622a23da4eeb3a321bac64f8ad9f9b",
                                  "typeString": "literal_string \"solution already used before\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8852,
                                8853
                              ],
                              "referencedDeclaration": 8853,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7824,
                            "name": "Identifier",
                            "src": "1933:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "exist",
                              "referencedDeclaration": 7711,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7716,
                                      "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "solutions"
                                    },
                                    "id": 7825,
                                    "name": "Identifier",
                                    "src": "1941:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7819,
                                      "type": "uint256",
                                      "value": "tokenId"
                                    },
                                    "id": 7826,
                                    "name": "Identifier",
                                    "src": "1951:7:6"
                                  }
                                ],
                                "id": 7827,
                                "name": "IndexAccess",
                                "src": "1941:18:6"
                              }
                            ],
                            "id": 7828,
                            "name": "MemberAccess",
                            "src": "1941:24:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "736f6c7574696f6e20616c72656164792075736564206265666f7265",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"solution already used before\"",
                              "value": "solution already used before"
                            },
                            "id": 7829,
                            "name": "Literal",
                            "src": "1967:30:6"
                          }
                        ],
                        "id": 7830,
                        "name": "FunctionCall",
                        "src": "1933:65:6"
                      }
                    ],
                    "id": 7831,
                    "name": "ExpressionStatement",
                    "src": "1933:65:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7823
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1426,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8902,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7832,
                                "name": "Identifier",
                                "src": "2015:5:6"
                              }
                            ],
                            "id": 7833,
                            "name": "MemberAccess",
                            "src": "2015:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7817,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7834,
                            "name": "Identifier",
                            "src": "2026:2:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7819,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7835,
                            "name": "Identifier",
                            "src": "2030:7:6"
                          }
                        ],
                        "id": 7836,
                        "name": "FunctionCall",
                        "src": "2015:23:6"
                      }
                    ],
                    "id": 7837,
                    "name": "Return",
                    "src": "2008:30:6"
                  }
                ],
                "id": 7838,
                "name": "Block",
                "src": "1923:122:6"
              }
            ],
            "id": 7839,
            "name": "FunctionDefinition",
            "src": "1858:187:6"
          }
        ],
        "id": 7840,
        "name": "ContractDefinition",
        "src": "301:1746:6"
      }
    ],
    "id": 7841,
    "name": "SourceUnit",
    "src": "0:2048:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xdCa5B1399e027a45674A7dCc931df81e506f1360",
      "transactionHash": "0x6d9a12ffd48599265542b0ebbfd8fa866a6cdc255a75cb0f18d8b7c00e54866e"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-27T21:24:38.520Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}